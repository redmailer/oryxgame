// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messageID.proto

#ifndef PROTOBUF_INCLUDED_messageID_2eproto
#define PROTOBUF_INCLUDED_messageID_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messageID_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_messageID_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_messageID_2eproto();
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
namespace Proto {

enum MESSAGE_ID {
  MSGID_HEART_BEAT = 0,
  MSGID_LOGIN_C = 101,
  MSGID_LOGIN_S = 102,
  MSGID_LOGOFF_C = 103,
  MSGID_LOGOFF_S = 104,
  MSGID_FORCE_QUIT_NTF = 105,
  MESSAGE_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MESSAGE_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool MESSAGE_ID_IsValid(int value);
const MESSAGE_ID MESSAGE_ID_MIN = MSGID_HEART_BEAT;
const MESSAGE_ID MESSAGE_ID_MAX = MSGID_FORCE_QUIT_NTF;
const int MESSAGE_ID_ARRAYSIZE = MESSAGE_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MESSAGE_ID_descriptor();
inline const ::std::string& MESSAGE_ID_Name(MESSAGE_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MESSAGE_ID_descriptor(), value);
}
inline bool MESSAGE_ID_Parse(
    const ::std::string& name, MESSAGE_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MESSAGE_ID>(
    MESSAGE_ID_descriptor(), name, value);
}
enum RESULT_ID {
  RESULT_SUCCESS = 0,
  RESULT_LOGIN_NOEXIST = 101,
  RESULT_LOGIN_REPEATED = 102,
  RESULT_LOGOFF_OTHERPLACE = 103,
  RESULT_LOGOFF_SEALOFF = 104,
  RESULT_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  RESULT_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool RESULT_ID_IsValid(int value);
const RESULT_ID RESULT_ID_MIN = RESULT_SUCCESS;
const RESULT_ID RESULT_ID_MAX = RESULT_LOGOFF_SEALOFF;
const int RESULT_ID_ARRAYSIZE = RESULT_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_ID_descriptor();
inline const ::std::string& RESULT_ID_Name(RESULT_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_ID_descriptor(), value);
}
inline bool RESULT_ID_Parse(
    const ::std::string& name, RESULT_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_ID>(
    RESULT_ID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Proto::MESSAGE_ID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::MESSAGE_ID>() {
  return ::Proto::MESSAGE_ID_descriptor();
}
template <> struct is_proto_enum< ::Proto::RESULT_ID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::RESULT_ID>() {
  return ::Proto::RESULT_ID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_messageID_2eproto
