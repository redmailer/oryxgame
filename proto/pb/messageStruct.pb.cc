// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messageStruct.proto

#include "messageStruct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace Proto {
class stHeartBeat_CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<stHeartBeat_C> _instance;
} _stHeartBeat_C_default_instance_;
class stHeartBeat_SDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<stHeartBeat_S> _instance;
} _stHeartBeat_S_default_instance_;
class stLogin_CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<stLogin_C> _instance;
} _stLogin_C_default_instance_;
class stLogin_SDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<stLogin_S> _instance;
} _stLogin_S_default_instance_;
}  // namespace Proto
static void InitDefaultsstHeartBeat_C_messageStruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::_stHeartBeat_C_default_instance_;
    new (ptr) ::Proto::stHeartBeat_C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::stHeartBeat_C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_stHeartBeat_C_messageStruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstHeartBeat_C_messageStruct_2eproto}, {}};

static void InitDefaultsstHeartBeat_S_messageStruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::_stHeartBeat_S_default_instance_;
    new (ptr) ::Proto::stHeartBeat_S();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::stHeartBeat_S::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_stHeartBeat_S_messageStruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstHeartBeat_S_messageStruct_2eproto}, {}};

static void InitDefaultsstLogin_C_messageStruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::_stLogin_C_default_instance_;
    new (ptr) ::Proto::stLogin_C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::stLogin_C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_stLogin_C_messageStruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstLogin_C_messageStruct_2eproto}, {}};

static void InitDefaultsstLogin_S_messageStruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::_stLogin_S_default_instance_;
    new (ptr) ::Proto::stLogin_S();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::stLogin_S::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_stLogin_S_messageStruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstLogin_S_messageStruct_2eproto}, {}};

void InitDefaults_messageStruct_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_stHeartBeat_C_messageStruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_stHeartBeat_S_messageStruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_stLogin_C_messageStruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_stLogin_S_messageStruct_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messageStruct_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_messageStruct_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messageStruct_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messageStruct_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Proto::stHeartBeat_C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::stHeartBeat_C, timenow_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Proto::stHeartBeat_S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::stHeartBeat_S, timenow_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Proto::stLogin_C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::stLogin_C, username_),
  PROTOBUF_FIELD_OFFSET(::Proto::stLogin_C, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Proto::stLogin_S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::stLogin_S, player_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Proto::stHeartBeat_C)},
  { 6, -1, sizeof(::Proto::stHeartBeat_S)},
  { 12, -1, sizeof(::Proto::stLogin_C)},
  { 19, -1, sizeof(::Proto::stLogin_S)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::_stHeartBeat_C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::_stHeartBeat_S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::_stLogin_C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::_stLogin_S_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messageStruct_2eproto = {
  {}, AddDescriptors_messageStruct_2eproto, "messageStruct.proto", schemas,
  file_default_instances, TableStruct_messageStruct_2eproto::offsets,
  file_level_metadata_messageStruct_2eproto, 4, file_level_enum_descriptors_messageStruct_2eproto, file_level_service_descriptors_messageStruct_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_messageStruct_2eproto = {
  false, InitDefaults_messageStruct_2eproto, 
  "\n\023messageStruct.proto\022\005Proto\" \n\rstHeartB"
  "eat_C\022\017\n\007timenow\030\001 \001(\005\" \n\rstHeartBeat_S\022"
  "\017\n\007timenow\030\001 \001(\005\"/\n\tstLogin_C\022\020\n\010usernam"
  "e\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\036\n\tstLogin_S\022\021"
  "\n\tplayer_id\030\001 \001(\003b\006proto3"
,
  "messageStruct.proto", &assign_descriptors_table_messageStruct_2eproto, 185,
};

void AddDescriptors_messageStruct_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messageStruct_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messageStruct_2eproto = []() { AddDescriptors_messageStruct_2eproto(); return true; }();
namespace Proto {

// ===================================================================

void stHeartBeat_C::InitAsDefaultInstance() {
}
class stHeartBeat_C::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stHeartBeat_C::kTimenowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stHeartBeat_C::stHeartBeat_C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.stHeartBeat_C)
}
stHeartBeat_C::stHeartBeat_C(const stHeartBeat_C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timenow_ = from.timenow_;
  // @@protoc_insertion_point(copy_constructor:Proto.stHeartBeat_C)
}

void stHeartBeat_C::SharedCtor() {
  timenow_ = 0;
}

stHeartBeat_C::~stHeartBeat_C() {
  // @@protoc_insertion_point(destructor:Proto.stHeartBeat_C)
  SharedDtor();
}

void stHeartBeat_C::SharedDtor() {
}

void stHeartBeat_C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const stHeartBeat_C& stHeartBeat_C::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_stHeartBeat_C_messageStruct_2eproto.base);
  return *internal_default_instance();
}


void stHeartBeat_C::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.stHeartBeat_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timenow_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* stHeartBeat_C::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<stHeartBeat_C*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 timenow = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_timenow(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool stHeartBeat_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.stHeartBeat_C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timenow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timenow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.stHeartBeat_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.stHeartBeat_C)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void stHeartBeat_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.stHeartBeat_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timenow = 1;
  if (this->timenow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timenow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.stHeartBeat_C)
}

::google::protobuf::uint8* stHeartBeat_C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.stHeartBeat_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timenow = 1;
  if (this->timenow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timenow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.stHeartBeat_C)
  return target;
}

size_t stHeartBeat_C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.stHeartBeat_C)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 timenow = 1;
  if (this->timenow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timenow());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stHeartBeat_C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.stHeartBeat_C)
  GOOGLE_DCHECK_NE(&from, this);
  const stHeartBeat_C* source =
      ::google::protobuf::DynamicCastToGenerated<stHeartBeat_C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.stHeartBeat_C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.stHeartBeat_C)
    MergeFrom(*source);
  }
}

void stHeartBeat_C::MergeFrom(const stHeartBeat_C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.stHeartBeat_C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timenow() != 0) {
    set_timenow(from.timenow());
  }
}

void stHeartBeat_C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.stHeartBeat_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stHeartBeat_C::CopyFrom(const stHeartBeat_C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.stHeartBeat_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stHeartBeat_C::IsInitialized() const {
  return true;
}

void stHeartBeat_C::Swap(stHeartBeat_C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stHeartBeat_C::InternalSwap(stHeartBeat_C* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(timenow_, other->timenow_);
}

::google::protobuf::Metadata stHeartBeat_C::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messageStruct_2eproto);
  return ::file_level_metadata_messageStruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void stHeartBeat_S::InitAsDefaultInstance() {
}
class stHeartBeat_S::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stHeartBeat_S::kTimenowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stHeartBeat_S::stHeartBeat_S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.stHeartBeat_S)
}
stHeartBeat_S::stHeartBeat_S(const stHeartBeat_S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timenow_ = from.timenow_;
  // @@protoc_insertion_point(copy_constructor:Proto.stHeartBeat_S)
}

void stHeartBeat_S::SharedCtor() {
  timenow_ = 0;
}

stHeartBeat_S::~stHeartBeat_S() {
  // @@protoc_insertion_point(destructor:Proto.stHeartBeat_S)
  SharedDtor();
}

void stHeartBeat_S::SharedDtor() {
}

void stHeartBeat_S::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const stHeartBeat_S& stHeartBeat_S::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_stHeartBeat_S_messageStruct_2eproto.base);
  return *internal_default_instance();
}


void stHeartBeat_S::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.stHeartBeat_S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timenow_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* stHeartBeat_S::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<stHeartBeat_S*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 timenow = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_timenow(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool stHeartBeat_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.stHeartBeat_S)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timenow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timenow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.stHeartBeat_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.stHeartBeat_S)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void stHeartBeat_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.stHeartBeat_S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timenow = 1;
  if (this->timenow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timenow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.stHeartBeat_S)
}

::google::protobuf::uint8* stHeartBeat_S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.stHeartBeat_S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timenow = 1;
  if (this->timenow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timenow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.stHeartBeat_S)
  return target;
}

size_t stHeartBeat_S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.stHeartBeat_S)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 timenow = 1;
  if (this->timenow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timenow());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stHeartBeat_S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.stHeartBeat_S)
  GOOGLE_DCHECK_NE(&from, this);
  const stHeartBeat_S* source =
      ::google::protobuf::DynamicCastToGenerated<stHeartBeat_S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.stHeartBeat_S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.stHeartBeat_S)
    MergeFrom(*source);
  }
}

void stHeartBeat_S::MergeFrom(const stHeartBeat_S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.stHeartBeat_S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timenow() != 0) {
    set_timenow(from.timenow());
  }
}

void stHeartBeat_S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.stHeartBeat_S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stHeartBeat_S::CopyFrom(const stHeartBeat_S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.stHeartBeat_S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stHeartBeat_S::IsInitialized() const {
  return true;
}

void stHeartBeat_S::Swap(stHeartBeat_S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stHeartBeat_S::InternalSwap(stHeartBeat_S* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(timenow_, other->timenow_);
}

::google::protobuf::Metadata stHeartBeat_S::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messageStruct_2eproto);
  return ::file_level_metadata_messageStruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void stLogin_C::InitAsDefaultInstance() {
}
class stLogin_C::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stLogin_C::kUsernameFieldNumber;
const int stLogin_C::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stLogin_C::stLogin_C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.stLogin_C)
}
stLogin_C::stLogin_C(const stLogin_C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:Proto.stLogin_C)
}

void stLogin_C::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_stLogin_C_messageStruct_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

stLogin_C::~stLogin_C() {
  // @@protoc_insertion_point(destructor:Proto.stLogin_C)
  SharedDtor();
}

void stLogin_C::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void stLogin_C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const stLogin_C& stLogin_C::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_stLogin_C_messageStruct_2eproto.base);
  return *internal_default_instance();
}


void stLogin_C::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.stLogin_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* stLogin_C::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<stLogin_C*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Proto.stLogin_C.username");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_username();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Proto.stLogin_C.password");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_password();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool stLogin_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.stLogin_C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.stLogin_C.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.stLogin_C.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.stLogin_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.stLogin_C)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void stLogin_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.stLogin_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.stLogin_C.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.stLogin_C.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.stLogin_C)
}

::google::protobuf::uint8* stLogin_C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.stLogin_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.stLogin_C.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.stLogin_C.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.stLogin_C)
  return target;
}

size_t stLogin_C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.stLogin_C)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stLogin_C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.stLogin_C)
  GOOGLE_DCHECK_NE(&from, this);
  const stLogin_C* source =
      ::google::protobuf::DynamicCastToGenerated<stLogin_C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.stLogin_C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.stLogin_C)
    MergeFrom(*source);
  }
}

void stLogin_C::MergeFrom(const stLogin_C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.stLogin_C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void stLogin_C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.stLogin_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stLogin_C::CopyFrom(const stLogin_C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.stLogin_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stLogin_C::IsInitialized() const {
  return true;
}

void stLogin_C::Swap(stLogin_C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stLogin_C::InternalSwap(stLogin_C* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata stLogin_C::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messageStruct_2eproto);
  return ::file_level_metadata_messageStruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void stLogin_S::InitAsDefaultInstance() {
}
class stLogin_S::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stLogin_S::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stLogin_S::stLogin_S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.stLogin_S)
}
stLogin_S::stLogin_S(const stLogin_S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:Proto.stLogin_S)
}

void stLogin_S::SharedCtor() {
  player_id_ = PROTOBUF_LONGLONG(0);
}

stLogin_S::~stLogin_S() {
  // @@protoc_insertion_point(destructor:Proto.stLogin_S)
  SharedDtor();
}

void stLogin_S::SharedDtor() {
}

void stLogin_S::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const stLogin_S& stLogin_S::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_stLogin_S_messageStruct_2eproto.base);
  return *internal_default_instance();
}


void stLogin_S::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.stLogin_S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* stLogin_S::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<stLogin_S*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 player_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int64 value = val;
        msg->set_player_id(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool stLogin_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.stLogin_S)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.stLogin_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.stLogin_S)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void stLogin_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.stLogin_S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.stLogin_S)
}

::google::protobuf::uint8* stLogin_S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.stLogin_S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.stLogin_S)
  return target;
}

size_t stLogin_S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.stLogin_S)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stLogin_S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.stLogin_S)
  GOOGLE_DCHECK_NE(&from, this);
  const stLogin_S* source =
      ::google::protobuf::DynamicCastToGenerated<stLogin_S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.stLogin_S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.stLogin_S)
    MergeFrom(*source);
  }
}

void stLogin_S::MergeFrom(const stLogin_S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.stLogin_S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
}

void stLogin_S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.stLogin_S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stLogin_S::CopyFrom(const stLogin_S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.stLogin_S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stLogin_S::IsInitialized() const {
  return true;
}

void stLogin_S::Swap(stLogin_S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stLogin_S::InternalSwap(stLogin_S* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(player_id_, other->player_id_);
}

::google::protobuf::Metadata stLogin_S::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messageStruct_2eproto);
  return ::file_level_metadata_messageStruct_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Proto::stHeartBeat_C* Arena::CreateMaybeMessage< ::Proto::stHeartBeat_C >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::stHeartBeat_C >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::stHeartBeat_S* Arena::CreateMaybeMessage< ::Proto::stHeartBeat_S >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::stHeartBeat_S >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::stLogin_C* Arena::CreateMaybeMessage< ::Proto::stLogin_C >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::stLogin_C >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::stLogin_S* Arena::CreateMaybeMessage< ::Proto::stLogin_S >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::stLogin_S >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
